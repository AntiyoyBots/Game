#pragma once

#include "General.h"
#include "Hex.h"
#include "Map.h"
#include "Unit.h"
#include "Player.h"


namespace game_module
{

	class Player;
	/*!
	\brief Абстрактный класс содержит методы для получения данных.
	- Класс Game косвенно наследует данный класс. Только класс Game переопределяет методы этого класса.
	- Для получения подробной информации о реализации методов следует изучить описание переопределенных
	методов класса Game.
	*/
	class IGetData
	{
	public:
		/*!
		\brief Чисто виртуальный унарный оператор возвращает указатель на гекс с переданными координатами.
		- В случае если такого гекса нет возвращает nullptr.

		\param hex Координаты требуемого к возвращению гекса.
		*/
		virtual Hex * operator () (const Pair & hex) = 0;
		/*!
		\brief Чисто виртуальный унарный оператор возвращает указатель на гекс с переданными координатами.
		- В случае если такого гекса нет возвращает nullptr.

		\param coord1 Первая координата требуемого к возвращению гекса.
		\param coord2 Вторая координата требуемого к возвращению гекса.
		*/
		virtual Hex * operator () (size_type coord1, size_type coord2) = 0;
		/*!
		\brief Чисто виртуальный метод возвращает указатель на юнита, находящегося в гексе с переданными координатами.
		- В случае если такого гекса нет возвращает nullptr.

		\param hex Координаты гекса, указатель на юнит которого необходимо вернуть.
		*/
		virtual Unit * get_unit(const Pair & hex) = 0;
		/*!
		\brief Чисто виртуальный метод возвращает вектор указателей на всех игроков, участвующих в игре.
		*/
		virtual std::vector<Player *> & get_players() = 0;
		/*!
		\brief Чисто виртуальный метод возвращает указатель на игрока, переданного цвета.
		- В случае если игрока такого цвета нет возвращает nullptr.

		\param seek_color Цвет игрока, указатель на которого необходимо вернуть.
		*/
		virtual Player * get_player(hex_color seek_color) = 0;
		/*!
		\brief Чисто виртуальный метод возвращает копию поля CurrentPlayer объекта класса.
		*/
		virtual hex_color get_current_player() const = 0;
		/*!
		\brief Чисто виртуальный метод возвращает ссылку на полe GameMap объекта класса.
		*/
		virtual Map & get_game_map() = 0;
		/*!
		\brief Чисто виртуальный метод возвращает поле CurrentTurn объекта класса.
		*/
		virtual size_type current_turn() const = 0;
		/*!
		\brief Чисто виртуальный метод возвращает поле MaxTurns объекта класса.
		*/
		virtual size_type max_turns() const = 0;
		/*!
		\brief Чисто виртуальный метод возвращает ссылку на поле Results объекта класса.
		*/
		virtual Result & results() = 0;
		/*!
		\brief Чисто виртуальный метод сообщает находится ли в игре игрок переданного цвета.
		- В случае если игрока такого цвета нет возвращает false.
		
		\param color Цвет игрока, которого необходимо проверить.
		*/
		virtual bool player_in_game(hex_color color) const = 0;
	};
}
